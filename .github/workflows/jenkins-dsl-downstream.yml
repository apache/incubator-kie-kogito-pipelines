# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Jenkins DSL

on:
  pull_request:
    paths:
    - 'dsl/**'

jobs: 
  downstream-dsl-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repository:
        - drools
        - kogito-runtimes
        - optaplanner
        - optaweb-employee-rostering
        - optaweb-vehicle-routing
        - optaplanner-quickstarts
        - kogito-apps
        - kogito-examples
        - kogito-images
        - kogito-operator
        - kie-tools
      fail-fast: false
    name: Downstream - ${{ matrix.repository }}
    steps:
    - name: Checkout 
      uses: actions/checkout@v2

    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Setup base branch
      if: matrix.repository != 'optaplanner-quickstarts' || github.base_ref != 'main'
      run: |
        echo 'BASE_BRANCH=${{ github.base_ref }}' >> $GITHUB_ENV

    - name: Setup correct base branch for optaplanner-quickstarts
      if: github.base_ref == 'main' && matrix.repository == 'optaplanner-quickstarts'
      run: |
        echo 'BASE_BRANCH=development' >> $GITHUB_ENV

    - name: Test DSL
      run: .ci/jenkins/dsl/test.sh -o ${{ matrix.repository }} -h ${{ github.head_ref }} -r ${{ github.event.pull_request.head.repo.full_name }} -b ${{ env.BASE_BRANCH }} -t ${{ github.event.pull_request.base.repo.full_name }} .ci/jenkins/dsl