import org.jenkinsci.plugins.workflow.libs.Library

@Library('jenkins-pipeline-shared-libraries@kie-issues-828')_

pipeline {
    agent {
        label util.avoidFaultyNodes()
    }
    options {
        timeout(time: 120, unit: 'MINUTES')
    }

    stages {
        stage('Create sources ZIP') {
            steps {
                sh 'tools/zip-sources-all.sh'
                archiveArtifacts artifacts: '**/*-sources.zip'
            }
        }
        stage('Sign and upload the sources.zip') {
            steps {
                script {
                    String sourcesNameBase = "incubator-kie-${TARGET_VERSION}-sources"
                    String sourcesFileName = "${sourcesNameBase}.zip"
                    String signatureFileName = "${sourcesNameBase}.asc"
                    // Currently not working because  CI permissions and credentials are fubar
                    //release.gpgImportKeyFromFileWithPassword(getReleaseGpgSignKeyCredsId(), getReleaseGpgSignPassphraseCredsId())
                    //release.gpgSignFileDetachedSignatureWithPassword(sourcesFileName, signatureFileName, getReleaseGpgSignPassphraseCredsId())
                    //release.svnUploadFileToRepository(getReleaseSvnRepository(), getReleaseSvnCredsId(), $TARGET_VERSION, sourcesFileName, signatureFileName)
                }
                archiveArtifacts artifacts: '**/*.asc'
            }
        }
    }
}


String getReleaseGpgSignKeyCredsId() {
    return env.RELEASE_GPG_SIGN_KEY_CREDS_ID
}

String getReleaseGpgSignPassphraseCredsId() {
    return env.RELEASE_GPG_SIGN_PASSPHRASE_CREDS_ID
}

String getReleaseSvnRepository() {
    return env.RELEASE_SVN_REPOSITORY
}

String getReleaseSvnCredsId() {
    return env.RELEASE_SVN_CREDS_ID
}