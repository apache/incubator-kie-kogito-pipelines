import org.jenkinsci.plugins.workflow.libs.Library

@Library('jenkins-pipeline-shared-libraries')_

pipeline {
    agent {
        label 'ubuntu'
    }

    environment {
        DOCKER_CONFIG = "${WORKSPACE}/.docker"
    }

    options {
        timeout(time: 60, unit: 'MINUTES')
    }

    stages {
        stage('Build image') {
            steps {
                script {
                    String imageName = 'quay.io/kiegroup/kogito-ci-build'
                    String imageTag = "0.0.0-build-${BUILD_NUMBER}"
                    String imageNameTag = "${imageName}:${imageTag}"
                    String commitImageNameTag = "${imageName}:${GIT_COMMIT}"
                    String latestImageNameTag = "${imageName}:latest"

                    cloud.loginContainerRegistry('quay.io', 'quay_kiegroup_registry_token')

                    dir('kogito-pipelines') {
                        deleteDir()
                        checkout(githubscm.resolveRepository('kogito-pipelines', 'radtriste', 'apache_migration_pr_checks', false)) // TODO to set back

                        sh """
                            docker build --build-arg SDKMAN_JAVA=11.0.20-tem -t ${imageNameTag} -f apache-nodes/Dockerfile.kogito-ci-build .
                            docker tag ${imageNameTag} ${commitImageNameTag}
                            docker tag ${imageNameTag} ${latestImageNameTag}
                        """

                        sh """
                            docker --config ${DOCKER_CONFIG} push ${imageNameTag}
                            docker --config ${DOCKER_CONFIG} push ${commitImageNameTag}
                            docker --config ${DOCKER_CONFIG} push ${latestImageNameTag}
                        """
                    }
                }
            }
            post {
                always {
                    script {
                        sh "rm -rf ${DOCKER_CONFIG}"
                        sh 'docker logout quay.io'
io'
                    }
                }
            }
        }
    }
}
