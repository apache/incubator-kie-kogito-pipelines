name: 'Java + Maven configuration'
description: 'Java and Maven version setup'
inputs:
  java-version:
    description: "the java version"
    default: "11"
    required: false
  maven-version:
    description: "the maven version"
    default: "3.8.6"
    required: false
  cache-key-prefix:
    description: "the cache key"
    required: false
  allow-snapshots:
    description: "Whether the download of snapshots should be allowed"
    required: false
    default: "false"
  debug:
    description: "Activate debug display"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Setup Jdk
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: ${{ inputs.java-version }}
        check-latest: true
    # We have to download the required scripts to our local workspace
    - name: Checkout Scripts
      uses: actions/checkout@v4
      # For testing only, we will revert to apache once we test it
      with:
        repository: ricardozanini/kogito-pipelines
        ref: fix-migration-modules
        sparse-checkout: |
          .ci/actions/maven
        path: maven-tools
    - name: Cache Maven Download
      id: cache-maven-download
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-maven-${{ inputs.maven-version }}
        path: |
          ~/.maven/download/
    - name: Set up Maven
      shell: bash
      run: |
        ./maven-tools/.ci/actions/maven/install-maven.sh "$HOME/.local/mvn" ${{ inputs.maven-version }}
        echo "$HOME/.local/mvn/bin" >> $GITHUB_PATH
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        # Cannot use SNAPSHOT pattern matchin due to https://github.com/actions/cache/issues/364
        # path: ~/.m2/repository/*,~/.m2/repository/**/*[!(-SNAPSHOT*)]
        # Workaround taken from https://github.com/actions/toolkit/issues/713#issuecomment-850321461
        path: |
          ~/.m2/repository/*/*
          !~/.m2/repository/org/kie
          !~/.m2/repository/org/drools
          !~/.m2/repository/org/optaplanner
        key: ${{ inputs.cache-key-prefix }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys:  ${{ inputs.cache-key-prefix }}-m2
    - name: Setup Maven Settings
      shell: bash
      run: |
        cp maven-tools/.ci/actions/maven/settings-template.xml ${HOME}/.m2/settings.xml
        sed -i 's/{allow-snapshots}/${{ inputs.allow-snapshots }}/g' ${HOME}/.m2/settings.xml

    - name: Debug settings.xml
      if: ${{ inputs.debug }}
      shell: bash
      run: |
        cat ~/.m2/settings.xml
