name: 'DSL tests'
description: 'Tests DSL generation'
inputs:
  repository:
    description: author/repository to check
    required: false
  main-config-file-repo:
    description: author/repository to find the main config file
    required: false
  main-config-file-ref:
    description: reference to find the main config file
    required: false
  main-config-file-path:
    description: path to find the main config file
    required: false
  branch-config-branch:
    description: branch config branch to look for
    required: false
  base-branch:
    description: base branch for the checks
    required: false
    default: ''
  jobs-folder-path:
    description: folder path where to find the jobs.groovy file
    required: false
    default: .ci/jenkins/dsl

runs:
  using: "composite"
  steps:
  - name: Set up JDK 1.11
    uses: actions/setup-java@v1
    with:
      java-version: 11

  - name: Checkout Seed repo
    uses: actions/checkout@v2
    with:
      repository: kiegroup/kogito-pipelines
      ref: main
      path: seed_repo

  - name: Setup default base branch based on input (if any, else fallback)
    shell: bash
    run: |
      branch=${{ inputs.base-branch }}
      if [ -z ${branch} ]; then branch=${{ github.base_ref }}; fi
      echo "Use base branch ${branch}"
      echo "BASE_BRANCH=${branch}" >> $GITHUB_ENV
  
  - name: Test DSL
    shell: bash
    working-directory: seed_repo
    env:
      DSL_DEFAULT_REPOSITORY: ${{ inputs.repository }}
      DSL_DEFAULT_MAIN_CONFIG_FILE_REPO: ${{ inputs.main-config-file-repo }}
      DSL_DEFAULT_MAIN_CONFIG_FILE_REF: ${{ inputs.main-config-file-ref }}
      DSL_DEFAULT_MAIN_CONFIG_FILE_PATH: ${{ inputs.main-config-file-path }}
      DSL_DEFAULT_BRANCH_CONFIG_BRANCH: ${{ inputs.branch-config-branch }}
    run: |
      dsl/seed/scripts/seed_test.sh -h ${{ github.head_ref }} \
              -r ${{ github.event.pull_request.head.repo.full_name }} \
              -b ${{ env.BASE_BRANCH }} \
              -t ${{ github.event.pull_request.base.repo.full_name }} \
              ${{ inputs.jobs-folder-path }}
