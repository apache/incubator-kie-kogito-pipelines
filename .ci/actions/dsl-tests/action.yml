name: 'DSL tests'
description: 'Tests DSL generation'
inputs:
  project:
    description: which project is built ?
    required: true
    default: kogito
  repository:
    description: author/repository to test
    required: false
  jobs-folder-path:
    description: folder path where to find the jobs.groovy file
    required: false
    default: .ci/jenkins/dsl
  main-config-file-repo:
    description: author/repository to find the main config file
    required: false
  main-config-file-path:
    description: path to find the main config file
    required: false
  branch-config-file-repo:
    description: author/repository to find the branch config file
    required: false
  branch-config-file-path:
    description: path to find the branch config file
    required: false
  base-branch:
    description: base branch for the checks
    required: false
    default: ''
  save-results:
    description: whether results of testing should be saved. Default to true.
    required: false
    default: 'true'

runs:
  using: "composite"
  steps:
  - name: Set up JDK 1.11
    uses: actions/setup-java@v3
    with:
      java-version: 11
      distribution: temurin
      check-latest: true

  - name: Checkout Seed repo
    uses: actions/checkout@v3
    with:
      repository: apache/incubator-kie-kogito-pipelines
      ref: main
      path: seed_repo

  - name: Setup default base branch based on input (if any, else fallback)
    shell: bash
    run: |
      base_branch=${{ inputs.base-branch }}
      if [ -z ${base_branch} ]; then base_branch=${{ github.base_ref }}; fi
      echo "Use base base_branch ${base_branch}"
      echo "BASE_BRANCH=${base_branch}" >> $GITHUB_ENV
  
  - name: Setup fallback seed reference
    shell: bash
    run: |
      fallback_seed_ref=${{ env.BASE_BRANCH }}
      if [[ ${fallback_seed_ref} =~ ^[0-9]+\.[0-9]+\.x$ ]]; then 
        IFS='.' read -ra ver <<< "${fallback_seed_ref}"
        release=${ver[2]}
        minor=${ver[1]}
        major=${ver[0]}
        fallback_seed_ref="seed-${{ inputs.project }}-$((major)).$minor.$release"
      fi
      echo "FALLBACK_SEED_REF=${fallback_seed_ref}" >> $GITHUB_ENV

  - name: Prepare pipelines test dir
    shell: bash
    run: |
      pipelines_test_dir=$(mktemp -d)
      echo "Using pipelines test dir ${pipelines_test_dir}"
      echo "PIPELINES_TEST_DIR=${pipelines_test_dir}" >> $GITHUB_ENV

  - name: Checkout current repo
    uses: actions/checkout@v3
    with:
      path: dsl-tests-dir

  - name: Test DSL
    shell: bash
    working-directory: dsl-tests-dir
    env:
      DSL_DEFAULT_TEST_REPO: ${{ inputs.repository }}

      DSL_DEFAULT_MAIN_CONFIG_FILE_PATH: ${{ inputs.main-config-file-path }}
      DSL_DEFAULT_FALLBACK_MAIN_CONFIG_FILE_REPO: ${{ inputs.main-config-file-repo }}
      
      DSL_DEFAULT_BRANCH_CONFIG_NAME: ${{ github.base_ref }}
      DSL_DEFAULT_BRANCH_CONFIG_FILE_PATH: ${{ inputs.branch-config-file-path }}
      DSL_DEFAULT_FALLBACK_BRANCH_CONFIG_FILE_REPO: ${{ inputs.branch-config-file-repo }}

      DSL_DEFAULT_FALLBACK_SEED_REF: ${{ env.FALLBACK_SEED_REF }}
      DSL_DEFAULT_PIPELINES_TEST_DIR: ${{ env.PIPELINES_TEST_DIR }}

      DSL_DEFAULT_CURRENT_REPOSITORY: ${{ github.event.pull_request.head.repo.full_name }}
      DSL_DEFAULT_CURRENT_REF: ${{ github.event.pull_request.head.ref }}
    run: |
      ${GITHUB_WORKSPACE}/seed_repo/dsl/seed/scripts/seed_test.sh ${{ inputs.jobs-folder-path }}
  
  - name: Setup upload artifact name
    if: ${{ always() && inputs.save-results }}
    shell: bash
    run: |
      artifact_name="${{ inputs.main-config-file-repo }}-dsl-downstream-${{ inputs.repository }}-test-results"
      echo "artifact_name = ${artifact_name}"
      artifact_name=$(echo "${artifact_name}" | tr / _)
      echo "artifact_name = ${artifact_name}"
      echo "UPLOAD_ARTIFACT_NAME=${artifact_name}" >> $GITHUB_ENV

  - name: Upload result
    if: ${{ always() && inputs.save-results }}
    uses: actions/upload-artifact@v3
    with:
      name: ${{ env.UPLOAD_ARTIFACT_NAME }}
      path: ${{ env.PIPELINES_TEST_DIR }}/dsl/seed/build/reports/tests/test/

